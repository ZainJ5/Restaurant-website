import os
import time
import tempfile
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.common.exceptions import TimeoutException, NoSuchElementException
from selenium.webdriver.common.action_chains import ActionChains

class JoinZoomMeeting:
    def __init__(self):
        print("Initializing JoinZoomMeeting class...")
        
        # Prompt user for meeting details
        self.meeting_id = input("Enter Zoom Meeting ID: ")
        self.passcode = input("Enter Zoom Meeting Passcode: ")
        self.display_name = input("Enter display name (default: ZoomUser): ") or "ZoomUser"
        
        # Print the inputs for debug
        print(f"[DEBUG] Meeting ID: {self.meeting_id}")
        print(f"[DEBUG] Passcode: {self.passcode}")
        print(f"[DEBUG] Display name: {self.display_name}")
        
        # Configure Chrome options
        print("[DEBUG] Setting up Chrome driver options...")
        opt = Options()
        opt.add_argument('--disable-blink-features=AutomationControlled')
        opt.add_argument('--start-maximized')
        opt.add_experimental_option("prefs", {
            "profile.default_content_setting_values.media_stream_mic": 1,
            "profile.default_content_setting_values.media_stream_camera": 1,
            "profile.default_content_setting_values.geolocation": 0,
            "profile.default_content_setting_values.notifications": 1
        })
        
        # Launch browser
        print("[DEBUG] Launching Chrome browser...")
        self.driver = webdriver.Chrome(options=opt)
        
        # Initialize WebDriverWait
        print("[DEBUG] Initializing WebDriverWait...")
        self.wait = WebDriverWait(self.driver, 20)

    def join_meeting(self):
        print("[DEBUG] Entering join_meeting method...")
        try:
            # Navigate to Zoom join URL
            zoom_url = f"https://zoom.us/wc/join/{self.meeting_id}"
            print(f"[DEBUG] Navigating to Zoom URL: {zoom_url}")
            self.driver.get(zoom_url)
            
            # Attempt passcode entry if prompted
            try:
                print("[DEBUG] Checking for passcode field...")
                passcode_field = self.wait.until(EC.presence_of_element_located((By.ID, "inputpasscode")))
                passcode_field.clear()
                passcode_field.send_keys(self.passcode)
                print("[DEBUG] Passcode entered.")
                
                join_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'button.btn')))
                join_button.click()
                print("[DEBUG] Clicked join button after passcode.")
            except TimeoutException:
                print("[DEBUG] Passcode field not found. Possibly no passcode required or already passed this step.")
            
            # Attempt name entry if prompted
            try:
                print("[DEBUG] Checking for name field...")
                name_field = self.wait.until(EC.presence_of_element_located((By.ID, "inputname")))
                name_field.clear()
                name_field.send_keys(self.display_name)
                print("[DEBUG] Display name entered.")
                
                name_join_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, 'button.btn')))
                name_join_button.click()
                print("[DEBUG] Clicked join button after name entry.")
            except TimeoutException:
                print("[DEBUG] Name field not found. Possibly already logged in or name not required.")
            
            # Wait a bit for Zoom interface to load
            print("[DEBUG] Waiting briefly for Zoom interface to initialize...")
            time.sleep(5)
            print("[DEBUG] Finished join_meeting method.")
            
        except Exception as e:
            print(f"[ERROR] Failed to join Zoom meeting: {str(e)}")
            raise

    def turn_off_mic_cam(self):
        print("[DEBUG] Entering turn_off_mic_cam method...")
        
        # These selectors may change depending on Zoom updates
        try:
            print("[DEBUG] Locating microphone button...")
            mic_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, '[aria-label="Mute"]')))
            mic_button.click()
            print("[DEBUG] Microphone turned off.")
        except (TimeoutException, NoSuchElementException) as e:
            print(f"[DEBUG] Unable to turn off microphone: {str(e)}")
        
        try:
            print("[DEBUG] Locating camera button...")
            cam_button = self.wait.until(EC.element_to_be_clickable((By.CSS_SELECTOR, '[aria-label="Stop Video"]')))
            cam_button.click()
            print("[DEBUG] Camera turned off.")
        except (TimeoutException, NoSuchElementException) as e:
            print(f"[DEBUG] Unable to turn off camera: {str(e)}")

def main():
    print("[DEBUG] Starting main function...")
    temp_dir = tempfile.mkdtemp()
    print(f"[DEBUG] Temporary directory created at: {temp_dir}")
    
    try:
        zoom_obj = JoinZoomMeeting()
        zoom_obj.join_meeting()
        zoom_obj.turn_off_mic_cam()
        print("[DEBUG] Meeting flow completed.")
        
    except Exception as e:
        print(f"[ERROR] An error occurred: {str(e)}")
    finally:
        # Clean up if needed
        print("[DEBUG] Cleaning up temporary directory.")
        time.sleep(2)
        os.rmdir(temp_dir)
        print("[DEBUG] Main function finished.")

if __name__ == "__main__":
    main()